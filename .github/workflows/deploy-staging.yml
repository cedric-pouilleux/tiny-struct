name: Build, test and deploy integration

on:
  push:
    branches:
      - main

concurrency:
  group: build-nuxt
  cancel-in-progress: true

permissions:
  contents: write
  packages: write

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, typecheck, "test:unit"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup and install dependencies
        working-directory: app
        run: |
          npm install -g pnpm
          pnpm fetch --frozen-lockfile 
          pnpm install --offline

      - name: Run ${{ matrix.task }}
        working-directory: app
        run: pnpm ${{ matrix.task }}

  e2e-tests:
    name: Run Playwright end 2 end tests
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: app
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      - name: Start Nuxt App (Dev Mode)
        working-directory: app
        run: pnpm run dev &

      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install Playwright browsers
        working-directory: app
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        working-directory: app
        run: pnpm test:e2e

  build-and-push:
    name: Build image, push to Docker-hub
    runs-on: ubuntu-latest
    needs: e2e-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./devbox/Dockerfile.prod
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/nuxt_app:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/nuxt_app:${{ github.sha }}

  deploy-int:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to Integration VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            cd /home/github-ci/tiny-struct
            git pull
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nuxt_app:latest
            cd /home/github-ci/tiny-struct/devbox
            docker compose --env-file=./env/.env.integration --profile integration -p int up -d --build
            docker logout

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-int
    steps:
      - name: Deploy to Production VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nuxt_app:latest
            cd /home/github-ci/tiny-struct/devbox
            docker compose --env-file=./env/.env.production --profile production -p prod up -d --build
            docker image prune -f
            docker logout
